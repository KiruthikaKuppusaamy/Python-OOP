from abc import ABC, abstractmethod

# Abstract class
class Vehicle(ABC):
    @abstractmethod
    def start(self):
        pass   # only declaration, no implementation

# Subclass must implement the abstract method
class Car(Vehicle):
    def start(self):
        print("Car starts with a key.")

class Bike(Vehicle):
    def start(self):
        print("Bike starts with a button.")


# Usage
v1 = Car()
v1.start()

v2 = Bike()
v2.start()

#v = Vehicle()  # ‚ùå Error! Cannot create object of abstract class
